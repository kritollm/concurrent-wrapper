{
  "name": "concurrent-wrapper",
  "version": "1.0.3",
  "description": "Easily add logic to limit concurrent execution of any function returning a Promise.",
  "main": "index.js",
  "typing": "index.d.ts",
  "scripts": {
    "build": "tsc -p .",
    "test": "jest",
    "prepublish": "npm run build",
    "release": "np"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kritollm/concurrent-wrapper.git"
  },
  "keywords": [
    "concurrent",
    "wrapper",
    "async",
    "Promise",
    "easy"
  ],
  "jest": {
    "transform": {
      ".(ts|tsx)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
    },
    "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js"
    ]
  },
  "author": "Kristian MÃ¸rch",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/kritollm/concurrent-wrapper/issues"
  },
  "homepage": "https://github.com/kritollm/concurrent-wrapper#readme",
  "devDependencies": {
    "@types/jest": "^19.2.2",
    "np": "^2.13.1",
    "ts-jest": "^19.0.6"
  }
}
